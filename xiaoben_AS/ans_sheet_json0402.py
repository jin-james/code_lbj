# -*- coding: utf-8 -*-


def pre_info(sub_json_data):
	pre_info_json = {}
	pre_info_json['height'] = 842
	pre_info_json['width'] = 595
	pre_info_json['mark_base64_str'] = "/9j/4AAQSkZJRgABAQEAeAB4AAD/4QBORXhpZgAATU0AKgAAAAgABAMBAAUAAAABAAAAPlEQAAEAAAABAQAAAFERAAQAAAABAAASdFESAAQAAAABAAASdAAAAAAAAYagAACxj//bAEMAAgEBAgEBAgICAgICAgIDBQMDAwMDBgQEAwUHBgcHBwYHBwgJCwkICAoIBwcKDQoKCwwMDAwHCQ4PDQwOCwwMDP/bAEMBAgICAwMDBgMDBgwIBwgMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIABsAGwMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/APyo+OP7XPxP0D4n+JPs/jvxpbgaxeeX5WsXMa4M8gIwHAwAAPwrhb39tH4s74kj+JPj0GIkEJ4jvMEe4Elc18VbsXPjDUpH88MbqRtpORneSf8AP1rl5Bh/kygbDBgPvZNaRhHsc7nK57GP26vi/bNGB8TviLBKfmOPEl6RyMdPN9Ko6x+2X8W9Q1KWZvit8RiXI6+Kr0HgAf8APQ+leXz3qw3oMo8zBAyeD2qDV7KS71GWSOFmViOc5ycDP60nBLoJTkaPjvV49W8T3l0jBFuJDIBjBw2SB+Rrn5JmeRSWYBPlyB0r+nzxv/wb5fsg6XoH2iD4QokxAO7/AISfWT6jobvHauQu/wDggt+ydE9sF+E6ASx7m/4qTWOT/wCBVbxhdEuXLLY/m6tpAXAkf7xyWYflWnc2K3ExcPCAcfeOD0r9zPjZ/wAEcv2b/B2uyRad8OFt41UkA67qcmPlP965NcHd/wDBKP4AzTBm8AqWZFJP9taj/dH/AE3pThYUZ+R//9k="
	pre_info_json['target_base64_str'] = "/9j/4AAQSkZJRgABAQEAeAB4AAD/4QBORXhpZgAATU0AKgAAAAgABAMBAAUAAAABAAAAPlEQAAEAAAABAQAAAFERAAQAAAABAAASdFESAAQAAAABAAASdAAAAAAAAYagAACxj//bAEMAAgEBAgEBAgICAgICAgIDBQMDAwMDBgQEAwUHBgcHBwYHBwgJCwkICAoIBwcKDQoKCwwMDAwHCQ4PDQwOCwwMDP/bAEMBAgICAwMDBgMDBgwIBwgMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIABkACAMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/APx6/Zm+Juv6r8afh9HLrmqSSah4osftDfa5C7l79CxY5zznrRWL+yBCZv2g/hkoTcp8V6XkY6/6fFiitlBW2OZT1ZP+xXKP+GkvhWq/f/4S7SVORkAHUIf8/jRT/wBi/wD5Ob+F/wD2OOj/APpxioojsQ1q/U//2Q=="
	pre_info_json["page_template_base64_str"] = ['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']
	pre_info_json['page_num'] = sub_json_data['page_num']
	# pre_info_json['paper_num_count_flag'] = sub_json_data['paper_num_count_flag']
	pre_info_json['submark'] = [0, 3]
	pre_info_json['sub_mark_num_vec'] = sub_json_data['sub_mark_num_vec']
	pre_info_json['sub_mark_num'] = sub_json_data['sub_mark_num']
	pre_info_json['question_type'] = 0
	pre_info_json['paper_mark_width'] = 18
	pre_info_json['paper_mark_height'] = 18
	pre_info_json['paper_mark_to_mark'] = 525
	pre_info_json['question_mark_width'] = 6
	pre_info_json['question_mark_height'] = 18
	pre_info_json['absent_topleft_width'] = 28.3
	pre_info_json['absent_topleft_height'] = 97.05
	pre_info_json['absent_rightdown_width'] = 43.2
	pre_info_json['absent_rightdown_height'] = 88.4
	return pre_info_json


def choice_info(sub_json_data):
	choice_info_json = {}
	choice_answer_inf = {}
	choice_answer_inf["choice_answer_cnt"] = sub_json_data['choice_answer_cnt']
	choice_answer_inf["choice_answer_pattern"] = sub_json_data['choice_answer_pattern']
	choice_info_json['choice_answer_inf'] = choice_answer_inf
	choice_col_num = sub_json_data['choice_col_num']
	choice_info_json['choice_col_num'] = choice_col_num
	choice_row_num = sub_json_data['choice_row_num']
	choice_info_json["choice_row_num"] = choice_row_num
	# choice_info_json['col_to_col_gap'] = 420
	choice_info_json['horizon_gap'] = 5.2
	left_to_mark = [26.6, 178, 329.25]
	left_to_mark = left_to_mark[0:choice_col_num[0]]
	choice_info_json['left_to_mark'] = left_to_mark
	choice_info_json['horizon_choice_mark_to_mark'] = 464.2
	choice_info_json['question_type'] = 1
	choice_info_json["qus_range"] = sub_json_data['qus_range_choice']
	choice_info_json['rect_height'] = 10.25
	choice_info_json['rect_thick'] = 2.5
	choice_info_json['rect_width'] = 13
	# choice_info_json['scale'] = 0.54474708171206221
	choice_info_json['submark'] = sub_json_data['sub_mark_choice']
	top_to_mark_60 = [10.4, 119.6, 228.95, 338.15]
	top_to_mark_60_ = [10.4, 119.6, 228.95, 338.15, 447.35, 556.7]
	if choice_row_num[0] <= 4:
		top_to_mark = top_to_mark_60[0:choice_row_num[0]]
	else:
		top_to_mark = []
		round, rest = divmod(choice_row_num[0]-4, 6)
		for n in range(round):
			top_to_mark = top_to_mark_60.append(top_to_mark_60_)
		top_to_mark.append(top_to_mark_60_[0:rest])
	choice_info_json['top_to_mark'] = top_to_mark
	choice_info_json['vertical_gap'] = 5.4
	return choice_info_json


def fillin_info(sub_json_data):
	fillin_info = {}
	blankfillin_answer_inf = {
		"blankfillin_answer_cnt": 4,
		"blankfillin_answer_pattern": [4]
	}
	fillin_info['blankfillin_answer_inf'] = blankfillin_answer_inf
	fillin_info['question_type'] = 2
	fillin_info["qus_range"] = sub_json_data['qus_range_fillin']
	fillin_info['submark'] = sub_json_data['sub_mark_fillin']
	return fillin_info


def eassy_info(sub_json_data):
	eassy_info = {}
	eassy_answer_inf = {
		"eassy_answer_cnt": None,
		"eassy_answer_pattern": [2]
	}
	eassy_info['eassy_answer_inf'] = eassy_answer_inf
	eassy_info['question_type'] = 3
	eassy_info["qus_range"] = sub_json_data['qus_range_eassy']
	eassy_info['submark'] = sub_json_data['sub_mark_eassy']
	return eassy_info


def get_json(answer_sheet_data):
	from nile.utils.answersheet import write4answersheet

	json_data = []
	_, sub_json_data = write4answersheet(answer_sheet_data)
	# 总体数据
	pre_info_json = pre_info(sub_json_data)
	# 选择题数据
	choice_info_json = choice_info(sub_json_data)
	# 填空题数据
	fillin_info_json = fillin_info(sub_json_data)
	# 简答题数据
	eassy_info_json = eassy_info(sub_json_data)
	json_data.append(pre_info_json)
	json_data.append(choice_info_json)
	json_data.append(fillin_info_json)
	json_data.append(eassy_info_json)
	return json_data


